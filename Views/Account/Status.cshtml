@model UptimeMonitoring.Models.StatusModel
@{
    ViewBag.Title = "Status";
}
<div class="row-fluid">
    <div class="span12">
        <h2>@ViewBag.Title</h2>
    </div>
</div>

<div class="modal hide fade" id="createModel">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
        <h3>Create a Monitor</h3>
    </div>
    <div class="modal-body">
        @using (Html.BeginForm())
<<<<<<< HEAD
                {
            @Html.ValidationSummary(true)
            @Html.ValidationSummary()

            @Html.LabelFor(model => model.CreateSiteModel.site_name)
            @Html.TextBoxFor(model => model.CreateSiteModel.site_name)

            @Html.LabelFor(model => model.CreateSiteModel.site_url)
            @Html.TextBoxFor(model => model.CreateSiteModel.site_url, new { @Value = "http://"})
            @Html.ValidationMessageFor(model => model.CreateSiteModel.site_url)

            @Html.LabelFor(model => model.CreateSiteModel.frequency)
            @Html.DropDownListFor(model => model.CreateSiteModel.frequency, ViewData["freq"] as SelectList)
            @Html.ValidationMessageFor(model => model.CreateSiteModel.frequency)
            <p>
                <input id="create-button" class="btn btn-success" type="button" value="Set Monitor" />
            </p>
                }
    </div>
</div>

<div class="row-fluid">
    <div class="span12">
        <table class="table">
            <tr>
                <th>
<<<<<<< HEAD
                    @Html.DisplayNameFor(model => model.site_name)
                </th>
                <th class="no-phone">
                    @Html.DisplayNameFor(model => model.site_url)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.site_last_check)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.site_online)
                </th>
                <th class="no-phone">
                    @Html.DisplayNameFor(model => model.result)
                </th>
                <th class="no-phone">
                    @Html.DisplayNameFor(model => model.frequency)
=======
                    @Html.DisplayNameFor(model => model.ListSiteModel.Single().site_name)
                </th>
                <th class="no-phone">
                    @Html.DisplayNameFor(model => model.ListSiteModel.Single().site_url)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ListSiteModel.Single().site_last_check)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ListSiteModel.Single().site_online)
                </th>
                <th class="no-phone">
                    @Html.DisplayNameFor(model => model.ListSiteModel.Single().result)
                </th>
                <th class="no-phone">
                    @Html.DisplayNameFor(model => model.ListSiteModel.Single().frequency)
>>>>>>> Ajax update and create
                </th>
                <th></th>
            </tr>

<<<<<<< HEAD
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        <span style="display: none;" id="site-id">@item.Id</span>
=======
            @foreach (var item in Model.ListSiteModel)
            {
                <tr>
                    <td>
                        <span style="display: none;" class="site-id">@item.Id</span>
>>>>>>> Ajax update and create
                        @Html.DisplayFor(model => item.site_name)
                    </td>
                    <td class="no-phone">
                        @Html.DisplayFor(model => item.site_url)
                    </td>
                    <td class="last-check">
                        @Html.DisplayFor(model => item.site_last_check)
                    </td>
                    <td>
                        @Html.DisplayFor(model => item.site_online)
                    </td>
                    <td class="no-phone">
                        @Html.DisplayFor(model => item.result)
                    </td>
                    <td class="no-phone">
                        @Html.DisplayFor(model => item.frequency) Minutes
                    </td>
                    <td style="width: 100px;">
                        <a href="#" class="delete">Delete</a>
                        <span style="display: none;" class="delete-confirm">@Html.ActionLink("Are you sure?", "Delete", new { id = item.Id })</span>
                    </td>
                </tr>
            }

<<<<<<< HEAD
<<<<<<< HEAD
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(model => item.site_name)
                        </td>
                        <td class="no-phone">
                            @Html.DisplayFor(model => item.site_url)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.site_last_check)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.site_online)
                        </td>
                        <td class="no-phone">
                            @Html.DisplayFor(model => item.result)
                        </td>
                        <td class="no-phone">
                            @Html.DisplayFor(model => item.frequency) Minutes
                        </td>
                        <td style="width:100px;">
                            <a href="#" class="delete">Delete</a>
                            <span style="display:none;" class="delete-confirm">@Html.ActionLink("Are you sure?", "Delete", new { id = item.Id })</span>
                        </td>
                    </tr>
                }

            </table>
=======
        </table>
>>>>>>> Partial Ajax supprt
        <p>
            @Html.ActionLink("Create New Monitor", "Create", null, new { @class = "btn btn-primary" })
=======
        </table>
        <p>
            <a href="#createModel" role="button" class="btn btn-primary" data-toggle="modal">Create New Monitor</a>
            @*@Html.ActionLink("Create New Monitor", "Create", null, new { @class = "btn btn-primary" })*@
>>>>>>> Ajax update and create
=======
        {
            @Html.ValidationSummary(true)
            @Html.ValidationSummary()

            @Html.LabelFor(model => model.CreateSiteModel.site_name)
            @Html.TextBoxFor(model => model.CreateSiteModel.site_name)

            @Html.LabelFor(model => model.CreateSiteModel.site_url)
            @Html.TextBoxFor(model => model.CreateSiteModel.site_url, new { @Value = "http://" })
            @Html.ValidationMessageFor(model => model.CreateSiteModel.site_url)

            @Html.LabelFor(model => model.CreateSiteModel.frequency)
            @Html.DropDownListFor(model => model.CreateSiteModel.frequency, ViewData["freq"] as SelectList)
            @Html.ValidationMessageFor(model => model.CreateSiteModel.frequency)
            <p>
                <input id="create-button" class="btn btn-success" type="button" value="Set Monitor" />
            </p>
        }
    </div>
</div>

<div class="row-fluid">
    <div class="span12">
        <div class="status-table">
            @Html.Partial("StatusTable")
            <div style="display: none;" id="no-monitors"><h4>You have no monitors! Click the big blue button below to add some.</h4></div>
        </div>
        <p>
            <a href="#createModel" role="button" class="btn btn-primary" data-toggle="modal">Create New Monitor</a>
            @*@Html.ActionLink("Create New Monitor", "Create", null, new { @class = "btn btn-primary" })*@
>>>>>>> Mostly full AJAX
            <button class="btn btn-information" id="update">Update Now</button>
        </p>
    </div>
</div>

<script type="text/javascript">
<<<<<<< HEAD
=======
    $(document).ready(function () {
        CheckRows();
    });

    function CheckRows() {
        var rowCount = $('.table tr').size();
        if (rowCount < 2) {
            $('#no-monitors').show();
        } else {
            $('#no-monitors').hide();
        }
    }

>>>>>>> Mostly full AJAX
    $(".delete").click(function (event) {
        var link = $(this);
        var confirm = $(this).next();
        $(link).hide();
        $(confirm).fadeIn();
        setTimeout(function () {
            $(confirm).hide();
            $(link).fadeIn();
        }, 4000);
<<<<<<< HEAD
    });


    $("#update").click(function () {
        var urls = "";
<<<<<<< HEAD
        $(".site-id").each(function() {
            var url = $(this).text();
            urls += url + ",";
        });
        alert(urls);
            // Send an AJAX request
            $.getJSON("/API/Monitor/StatusUpdate?ids=5",
            function (data) {
                // On success, 'data' contains a list of products.
                $.each(data, function (num) {
                    alert(num);
                });
            });
        });
=======
        $(".site-id").each(function () {
            var url = $(this).text();
            urls += url + ",";
        });

        $.ajax({
            type: 'POST',
            url: "/API/Monitor/StatusUpdate?ids=" + urls.slice(0, -1),
            data: '',
            error: function (xhr, stats, error) {
                alert(error);
            },
            success: function (response) {
                //AJAX refresh eventually
                location.reload();
            }
        });
    });

    $("#create-button").click(function () {
        var $form = $(this).parents('form');
        $.ajax({
            type: 'POST',
            url: $form.attr('action'),
            data: $form.serialize(),
=======

        var row = link.closest('tr');
        var id = link.closest('tr').children().children(".site-id").text();

        $(".delete-confirm").click(function () {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("Delete", "Account")',
                data: 'id=' + id,
                error: function (xhr, stats, error) {
                    alert(error);
                },
                success: function (response) {
                    row.fadeOut('slow', function () {
                        row.remove();
                        CheckRows();
                    });
                }
            });
        });
    });


    $("#update").click(function () {
        var button = $(this);
        button.attr("disabled", "disabled");
        var urls = "";
        $(".site-id").each(function () {
            var url = $(this).text();
            urls += url + ",";
        });

        if (urls.length < 1) {
            button.removeAttr("disabled");
            alert("You have no monitors to check");
        } else {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("StatusTable", "Account")',
                data: 'ids=' + urls.slice(0, -1),
                error: function (xhr, stats, error) {
                    alert(error);
                    button.removeAttr("disabled");
                },
                success: function (response) {
                    $('.status-table').html(response);
                    button.removeAttr("disabled");
                }
            });
        }

    });

    $("#create-button").click(function () {
        var form = $(this).parents('form');
        $.ajax({
            type: 'POST',
            url: form.attr('action'),
            data: form.serialize(),
>>>>>>> Mostly full AJAX
            error: function (xhr, stats, error) {
                alert(error);
            },
            success: function (response) {
                $('#createModel').modal('hide');
<<<<<<< HEAD
                $(this).closest('form').find("input[type=text], textarea").val("");
                //AJAX refresh eventually
                location.reload();
            }
        });
    });
>>>>>>> Ajax update and create
=======
                form.find("input").val("");
                //AJAX refresh eventually
                //location.reload();
            }
        });
    });
>>>>>>> Mostly full AJAX
</script>
