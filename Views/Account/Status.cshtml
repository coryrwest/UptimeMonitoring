@model UptimeMonitoring.Models.StatusModel
@{
    ViewBag.Title = "Status";
}
<div class="row-fluid">
    <div class="span12">
        <h2>@ViewBag.Title</h2>
    </div>
</div>

<div class="modal hide fade" id="createModel">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
        <h3>Create a Monitor</h3>
    </div>
    <div class="modal-body" style="text-align: center;">
        @using (Html.BeginForm())
        {
            @Html.ValidationSummary(true)

            <div class="control-group">
                @Html.LabelFor(model => model.CreateSiteModel.site_name)
                @Html.TextBoxFor(model => model.CreateSiteModel.site_name)
                <br />
                @Html.ValidationMessageFor(model => model.CreateSiteModel.site_name)
                <br />
            </div>

            <div class="control-group">
                @Html.LabelFor(model => model.CreateSiteModel.site_url)
                @Html.TextBoxFor(model => model.CreateSiteModel.site_url, new { @Value = "http://" })
                <br />
                @Html.ValidationMessageFor(model => model.CreateSiteModel.site_url)
                <br />
            </div>
            
            <div class="control-group">
                @Html.LabelFor(model => model.CreateSiteModel.frequency)
                @Html.DropDownListFor(model => model.CreateSiteModel.frequency, ViewData["freq"] as SelectList)
                <br />
                @Html.ValidationMessageFor(model => model.CreateSiteModel.frequency)
                <br />
            </div>
            
            <p>
                <input id="create-button" class="btn btn-success" type="button" value="Set Monitor" />
            </p>
        }
    </div>
</div>

<div class="row-fluid">
    <div class="span12">
        <div class="status-table" id="status-table">
            @Html.Partial("StatusTable")
            <div style="display: none;" id="no-monitors">
                <h4>You have no monitors! Click the big blue button below to add some.</h4>
            </div>
        </div>
        <p>
            <a href="#createModel" role="button" class="btn btn-primary" data-toggle="modal">Create New Monitor</a>
            <button class="btn btn-information" id="update">Update Now</button>
        </p>
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        CheckRows();
    });

    function CheckRows() {
        var rowCount = $('.table tr').size();
        if (rowCount < 2) {
            $('#no-monitors').show();
        } else {
            $('#no-monitors').hide();
        }
    }

    $(".delete").click(function (event) {
        var link = $(this);
        var confirm = $(this).next();
        $(link).hide();
        $(confirm).fadeIn();
        setTimeout(function () {
            $(confirm).hide();
            $(link).fadeIn();
        }, 4000);

        var row = link.closest('tr');
        var id = link.closest('tr').children().children(".site-id").text();

        $(".delete-confirm").click(function () {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("Delete", "Account")',
                data: 'id=' + id,
                error: function (xhr, stats, error) {
                    //alert(error);
                },
                success: function (response) {
                    row.fadeOut('slow', function () {
                        row.remove();
                        CheckRows();
                    });
                }
            });
        });
    });


    $("#update").click(function () {
        var button = $(this);
        button.attr("disabled", "disabled");
        button.text("Loading...");
        var urls = "";
        $(".site-id").each(function () {
            var url = $(this).text();
            urls += url + ",";
        });

        if (urls.length < 1) {
            button.removeAttr("disabled");
            alert("You have no monitors to check");
        } else {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("StatusTable", "Account")',
                error: function (xhr, stats, error) {
                    alert(error);
                    button.removeAttr("disabled");
                    button.text("Update Now");
                },
                success: function (response) {
                    $('.status-table').html(response);
                    button.removeAttr("disabled");
                    button.text("Update Now");
                }
            });
        }

    });

    $("#create-button").click(function () {
        var button = $(this);
        var form = $(this).parents('form');
        if (form.valid()) {
            button.attr("disabled", "disabled");
            button.val("Creating...");
            $.ajax({
                type: 'POST',
                url: form.attr('action'),
                data: form.serialize(),
                error: function (xhr, stats, error) {
                    //alert(error);
                    location.reload();
                },
                success: function (response) {
                    //$('#createModel').modal('hide');
                    //form.find("input[type=text]").val("");
                    location.reload();
                }
            });
        }
        else {
            return false;
        }
    });
</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
